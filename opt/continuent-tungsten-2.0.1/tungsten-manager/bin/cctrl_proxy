#!/bin/bash
if [ $# -ne 2 ];
then
  echo "Usage: cctrl_proxy <input_pipe> <output_pipe>"
  exit 1
fi

# assign names for the input and output pipes
in_pipe=$1
out_pipe=$2

function clean_up {
  # Perform program exit housekeeping
  echo "cleaning up"
  rm -f $in_pipe
  rm -f $out_pipe

  for job in $(jobs -p); do
  	kill -KILL $job 
  done
  exit
}

# point to cctrl
cctrl="`dirname $0`/cctrl -expert -proxy -timeout 240"

# set up to do cleanup
trap clean_up SIGHUP SIGINT SIGTERM SIGPIPE

# create pipes
rm -f $in_pipe 
mkfifo $in_pipe
rm -f $out_pipe 
mkfifo $out_pipe

# start up in 'proxy' mode....
# Do not remove the following echo of the PID - it's required
# for the protocol with the ruby code
echo $$
tail -f <$in_pipe | $cctrl >$out_pipe &
wait
clean_up


